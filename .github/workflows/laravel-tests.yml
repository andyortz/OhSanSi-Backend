name: Laravel Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/laravel/sail-php82-pgsql:latest
      ports:
        - 5432:5432
      env:
        POSTGRES_USER: sail
        POSTGRES_PASSWORD: password
        POSTGRES_DB: testing

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: sail
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pgsql, pdo_pgsql, bcmath, ctype, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml
        coverage: none

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --no-progress

    - name: Prepare environment
      run: |
        cp .env.example .env.test
        sed -i 's/APP_ENV=.*/APP_ENV=testing/' .env.test
        sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=pgsql/' .env.test
        sed -i 's/DB_HOST=.*/DB_HOST=postgres/' .env.test
        sed -i 's/DB_PORT=.*/DB_PORT=5432/' .env.test
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=testing/' .env.test
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=sail/' .env.test
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env.test

    - name: Generate app key
      run: php artisan key:generate --env=test --force

    - name: Execute migrations and seeders
      run: |
        php artisan migrate:fresh --env=test --force
        php artisan db:seed --env=test --force

    - name: Run tests
      run: php artisan test --env=test

    - name: Upload coverage to Codecov (opcional)
      if: success()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests